var _compareKeys = require('./_compareKeys');
var _curry2 = require('./_curry2');
var _keyValue = require('./_keyValue');
var pluck = require('./pluck');


/**
 * Sorts the list according to a key generated by the supplied function.
 *
 * @func
 * @memberOf R
 * @category relation
 * @sig (a -> String) -> [a] -> [a]
 * @param {Function} fn The function mapping `list` items to keys.
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted by the keys generated by `fn`.
 * @example
 *
 *      var sortByFirstItem = R.sortBy(prop(0));
 *      var sortByNameCaseInsensitive = R.sortBy(compose(R.toLowerCase, prop('name')));
 *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];
 *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]
 *      var alice = {
 *         name: 'ALICE',
 *         age: 101
 *      };
 *      var bob = {
 *         name: 'Bob',
 *        age: -10
 *      };
 *      var clara = {
 *        name: 'clara',
 *        age: 314.159
 *      };
 *      var people = [clara, bob, alice];
 *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]
 */
module.exports = _curry2(function sortBy(fn, list) {
    return pluck('val', _keyValue(fn, list).sort(_compareKeys));
});
