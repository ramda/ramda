var _compareKeys = require('./internal/_compareKeys');
var _curry2 = require('./internal/_curry2');
var _keyValue = require('./internal/_keyValue');
var _pluck = require('./internal/_pluck');


/**
 * Sorts the list according to a key generated by the supplied function.
 *
 * @func
 * @memberOf R
 * @category Relation
 * @sig (a -> String) -> [a] -> [a]
 * @param {Function} fn The function mapping `list` items to keys.
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted by the keys generated by `fn`.
 * @example
 *
 *      > var sortByFirstItem = R.sortBy(R.head)
 *      > var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')))
 *      > sortByFirstItem([[-1, 1], [-2, 2], [-3, 3]])
 *      [[-3, 3], [-2, 2], [-1, 1]]
 *
 *      > var alice = {name: 'ALICE', age: 101}
 *      > var bob = {name: 'Bob', age: -10}
 *      > var clara = {name: 'clara', age: 314.159}
 *      > sortByNameCaseInsensitive([clara, bob, alice])
 *      [alice, bob, clara]
 */
module.exports = _curry2(function sortBy(fn, list) {
    return _pluck('val', _keyValue(fn, list).sort(_compareKeys));
});
